# This workflow forces a rebuild of a specific tag without deleting the existing one
# Useful when you want to ensure the latest code is built with an existing tag
name: Force Rebuild Tag

on:
  # Manual workflow dispatch with input parameters
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name to rebuild (e.g., v0.4.0)'
        required: true
        type: string
      force_rebuild:
        description: 'Force rebuild (type "REBUILD" to confirm)'
        required: true
        type: string

env:
  DOCKER_REGISTRY_NAME: cloudbaristaorg
  IMAGE_NAME: ${{ github.event.repository.name }}

jobs:
  force-rebuild:
    name: Force Rebuild Tag
    runs-on: ubuntu-22.04
    
    # Only allow if confirmation is provided
    if: github.event.inputs.force_rebuild == 'REBUILD'
    
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate tag format
        run: |
          TAG_NAME="${{ github.event.inputs.tag_name }}"
          if [[ ! $TAG_NAME =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Tag name must follow semver format (e.g., v0.4.0)"
            exit 1
          fi
          echo "Validating tag: $TAG_NAME"

      - name: Extract metadata for tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{env.DOCKER_REGISTRY_NAME}}/${{env.IMAGE_NAME}}
          tags: |
            type=raw,value=${{ github.event.inputs.tag_name }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Clear Docker cache (force fresh build)
        run: |
          docker buildx prune -f
          rm -rf /tmp/.buildx-cache || true

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and publish (force rebuild)
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: ./
          file: ./Dockerfile
          target: prod
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # Force rebuild by not using cache
          no-cache: true

      - name: Verify rebuild
        run: |
          TAG_NAME="${{ github.event.inputs.tag_name }}"
          echo "Verifying rebuilt tag: $TAG_NAME"
          
          # Wait for Docker Hub to process
          sleep 10
          
          # Get tag info
          TAG_INFO=$(curl -s "https://hub.docker.com/v2/repositories/${{ env.DOCKER_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}/tags/$TAG_NAME/")
          echo "Tag info: $TAG_INFO"
          
          echo "Tag $TAG_NAME successfully rebuilt with digest: ${{ steps.docker_build.outputs.digest }}"

      - name: Summary
        run: |
          echo "## Force Rebuild Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: ${{ github.event.inputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **New Digest**: ${{ steps.docker_build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: âœ… Successfully rebuilt" >> $GITHUB_STEP_SUMMARY
