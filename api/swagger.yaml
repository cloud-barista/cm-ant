basePath: /ant
definitions:
  app.AntResponse-array_load_LoadTestStatistics:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/load.LoadTestStatistics'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-array_load_MetricsSummary:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/load.MetricsSummary'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-array_load_ResultSummary:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        items:
          $ref: '#/definitions/load.ResultSummary'
        type: array
      successMessage:
        type: string
    type: object
  app.AntResponse-cost_EstimateCostInfoResults:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/cost.EstimateCostInfoResults'
      successMessage:
        type: string
    type: object
  app.AntResponse-cost_EstimateCostResults:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/cost.EstimateCostResults'
      successMessage:
        type: string
    type: object
  app.AntResponse-cost_GetEstimateForecastCostInfoResults:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/cost.GetEstimateForecastCostInfoResults'
      successMessage:
        type: string
    type: object
  app.AntResponse-cost_UpdateEstimateForecastCostInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/cost.UpdateEstimateForecastCostInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-int64:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: integer
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadGeneratorInstallInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestExecutionInfosResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestExecutionInfosResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestExecutionStateResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestExecutionStateResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllLoadTestScenarioCatalogsResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllLoadTestScenarioCatalogsResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_GetAllMonitoringAgentInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.GetAllMonitoringAgentInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadGeneratorInstallInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestExecutionInfoResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestExecutionInfoResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestExecutionStateResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestExecutionStateResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_LoadTestScenarioCatalogResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.LoadTestScenarioCatalogResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-load_MonitoringAgentInstallationResult:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        $ref: '#/definitions/load.MonitoringAgentInstallationResult'
      successMessage:
        type: string
    type: object
  app.AntResponse-string:
    properties:
      code:
        type: integer
      errorMessage:
        type: string
      result:
        type: string
      successMessage:
        type: string
    type: object
  app.AwsAdditionalInfoReq:
    properties:
      ownerId:
        type: string
      regions:
        items:
          type: string
        type: array
    type: object
  app.CostResourceReq:
    properties:
      resourceIds:
        items:
          type: string
        type: array
      resourceType:
        $ref: '#/definitions/constant.ResourceType'
    type: object
  app.InstallLoadGeneratorReq:
    properties:
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
    type: object
  app.JsonResult:
    type: object
  app.MonitoringAgentInstallationReq:
    properties:
      mciId:
        type: string
      nsId:
        type: string
      vmIds:
        items:
          type: string
        type: array
    type: object
  app.RunLoadGeneratorHttpReq:
    properties:
      bodyData:
        description: '{"xxx": "tttt", "wwwww": "wotjkenr"}'
        type: string
      hostname:
        description: xx.xx.xx.xx or asx.bbb.com
        type: string
      method:
        description: GET or POST
        type: string
      path:
        description: /xxx/www/sss or possibly empty
        type: string
      port:
        description: 1 ~ 65353
        type: string
      protocol:
        description: http or https
        type: string
    required:
    - bodyData
    - hostname
    - method
    - path
    - port
    - protocol
    type: object
  app.RunLoadTestReq:
    properties:
      agentHostname:
        description: basically, it is same as host for vm
        type: string
      collectAdditionalSystemMetrics:
        description: agent tcp default port is 5555
        type: boolean
      duration:
        type: string
      httpReqs:
        items:
          $ref: '#/definitions/app.RunLoadGeneratorHttpReq'
        type: array
      installLoadGenerator:
        allOf:
        - $ref: '#/definitions/app.InstallLoadGeneratorReq'
        description: localhost for installing load generator; local | remote
      loadGeneratorInstallInfoId:
        description: if already installed load generator simply put this field
        type: integer
      mciId:
        description: for metadata usage
        type: string
      nsId:
        description: for validate agent host and connect to tumblebug resources
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        description: test scenario
        type: string
      virtualUsers:
        type: string
      vmId:
        description: for metadata usage
        type: string
    type: object
  app.StopLoadTestReq:
    properties:
      loadTestKey:
        type: string
      mciId:
        type: string
      nsId:
        type: string
      vmId:
        type: string
    type: object
  app.UpdateAndGetEstimateCostReq:
    properties:
      specs:
        items:
          properties:
            image:
              type: string
            instanceType:
              type: string
            providerName:
              type: string
            regionName:
              type: string
          required:
          - instanceType
          - providerName
          - regionName
          type: object
        type: array
      specsWithFormat:
        items:
          properties:
            commonImage:
              type: string
            commonSpec:
              type: string
          required:
          - commonSpec
          type: object
        type: array
    type: object
  app.UpdateEstimateForecastCostRawReq:
    properties:
      awsAdditionalInfo:
        $ref: '#/definitions/app.AwsAdditionalInfoReq'
      costResources:
        items:
          $ref: '#/definitions/app.CostResourceReq'
        type: array
    required:
    - costResources
    type: object
  app.UpdateEstimateForecastCostReq:
    properties:
      mciId:
        type: string
      nsId:
        type: string
    type: object
  constant.ExecutionStatus:
    enum:
    - on_processing
    - on_fetching
    - successed
    - test_failed
    type: string
    x-enum-varnames:
    - OnProcessing
    - OnFetching
    - Successed
    - TestFailed
  constant.IconCode:
    enum:
    - IC0001
    - IC0002
    - IC0003
    type: string
    x-enum-varnames:
    - Ok
    - Fail
    - Pending
  constant.InstallLocation:
    enum:
    - local
    - remote
    type: string
    x-enum-varnames:
    - Local
    - Remote
  constant.PriceCurrency:
    enum:
    - USD
    - KRW
    type: string
    x-enum-varnames:
    - USD
    - KRW
  constant.PricePolicy:
    enum:
    - OnDemand
    type: string
    x-enum-varnames:
    - OnDemand
  constant.PriceUnit:
    enum:
    - PerHour
    - PerYear
    type: string
    x-enum-varnames:
    - PerHour
    - PerYear
  constant.ResourceType:
    enum:
    - VM
    - VNet
    - DataDisk
    - Etc
    type: string
    x-enum-varnames:
    - VM
    - VNet
    - DataDisk
    - Etc
  cost.EsimateCostSpecResults:
    properties:
      estimateForecastCostSpecDetailResults:
        items:
          $ref: '#/definitions/cost.EstimateCostSpecDetailResult'
        type: array
      imageName:
        type: string
      instanceType:
        type: string
      providerName:
        type: string
      regionName:
        type: string
      totalMaxMonthlyPrice:
        type: number
      totalMinMonthlyPrice:
        type: number
    type: object
  cost.EstimateCostInfoResult:
    properties:
      calculatedMonthlyPrice:
        type: number
      currency:
        $ref: '#/definitions/constant.PriceCurrency'
      id:
        type: integer
      imageName:
        type: string
      instanceType:
        type: string
      lastUpdatedAt:
        type: string
      memory:
        type: string
      originalPricePolicy:
        type: string
      osType:
        type: string
      price:
        type: string
      priceDescription:
        type: string
      pricePolicy:
        $ref: '#/definitions/constant.PricePolicy'
      productDescription:
        type: string
      providerName:
        type: string
      regionName:
        type: string
      storage:
        type: string
      unit:
        $ref: '#/definitions/constant.PriceUnit'
      vCpu:
        type: string
    type: object
  cost.EstimateCostInfoResults:
    properties:
      estimateCostInfoResult:
        items:
          $ref: '#/definitions/cost.EstimateCostInfoResult'
        type: array
      resultCount:
        type: integer
    type: object
  cost.EstimateCostResults:
    properties:
      esimateCostSpecResults:
        items:
          $ref: '#/definitions/cost.EsimateCostSpecResults'
        type: array
    type: object
  cost.EstimateCostSpecDetailResult:
    properties:
      calculatedMonthlyPrice:
        type: number
      currency:
        $ref: '#/definitions/constant.PriceCurrency'
      id:
        type: integer
      lastUpdatedAt:
        type: string
      memory:
        type: string
      originalPricePolicy:
        type: string
      osType:
        type: string
      price:
        type: string
      priceDescription:
        type: string
      pricePolicy:
        $ref: '#/definitions/constant.PricePolicy'
      productDescription:
        type: string
      storage:
        type: string
      unit:
        $ref: '#/definitions/constant.PriceUnit'
      vCpu:
        type: string
    type: object
  cost.GetEstimateForecastCostInfoResult:
    properties:
      category:
        type: string
      date:
        type: string
      provider:
        type: string
      resourceId:
        type: string
      resourceType:
        type: string
      totalCost:
        type: number
      unit:
        type: string
    type: object
  cost.GetEstimateForecastCostInfoResults:
    properties:
      getEstimateForecastCostInfoResults:
        items:
          $ref: '#/definitions/cost.GetEstimateForecastCostInfoResult'
        type: array
      resultCount:
        type: integer
    type: object
  cost.UpdateEstimateForecastCostInfoResult:
    properties:
      fetchedDataCount:
        type: integer
      insertedDataCount:
        type: integer
      updatedDataCount:
        type: integer
    type: object
  load.CreateLoadTestScenarioCatalogReq:
    properties:
      description:
        example: Basic load test scenario catalog template
        type: string
      duration:
        example: "300"
        type: string
      name:
        example: Basic Load Test Scenario
        type: string
      rampUpSteps:
        example: "5"
        type: string
      rampUpTime:
        example: "60"
        type: string
      virtualUsers:
        example: "10"
        type: string
    required:
    - duration
    - name
    - rampUpSteps
    - rampUpTime
    - virtualUsers
    type: object
  load.GetAllLoadGeneratorInstallInfoResult:
    properties:
      loadGeneratorInstallInfoResults:
        items:
          $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
        type: array
      totalRows:
        type: integer
    type: object
  load.GetAllLoadTestExecutionInfosResult:
    properties:
      loadTestExecutionInfos:
        items:
          $ref: '#/definitions/load.LoadTestExecutionInfoResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllLoadTestExecutionStateResult:
    properties:
      loadTestExecutionStates:
        items:
          $ref: '#/definitions/load.LoadTestExecutionStateResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllLoadTestScenarioCatalogsResult:
    properties:
      loadTestScenarioCatalogs:
        items:
          $ref: '#/definitions/load.LoadTestScenarioCatalogResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.GetAllMonitoringAgentInfoResult:
    properties:
      monitoringAgentInfos:
        items:
          $ref: '#/definitions/load.MonitoringAgentInstallationResult'
        type: array
      totalRow:
        type: integer
    type: object
  load.LoadGeneratorInstallInfoResult:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      installLocation:
        $ref: '#/definitions/constant.InstallLocation'
      installPath:
        type: string
      installType:
        type: string
      installVersion:
        type: string
      loadGeneratorServers:
        items:
          $ref: '#/definitions/load.LoadGeneratorServerResult'
        type: array
      privateKeyName:
        type: string
      publicKeyName:
        type: string
      status:
        type: string
      updatedAt:
        type: string
    type: object
  load.LoadGeneratorServerResult:
    properties:
      additionalVmKey:
        type: string
      createdAt:
        type: string
      csp:
        type: string
      id:
        type: integer
      label:
        type: string
      lat:
        type: string
      lon:
        type: string
      machineType:
        type: string
      privateIp:
        type: string
      publicDns:
        type: string
      publicIp:
        type: string
      region:
        type: string
      sshPort:
        type: string
      startTime:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmId:
        type: string
      zone:
        type: string
    type: object
  load.LoadTestExecutionHttpInfoResult:
    properties:
      bodyData:
        type: string
      hostname:
        type: string
      id:
        type: integer
      method:
        type: string
      path:
        type: string
      port:
        type: string
      protocol:
        type: string
    type: object
  load.LoadTestExecutionInfoResult:
    properties:
      agentHostname:
        type: string
      agentInstalled:
        type: boolean
      compileDuration:
        type: string
      duration:
        type: string
      executionDuration:
        type: string
      id:
        type: integer
      loadGeneratorInstallInfo:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      loadTestExecutionHttpInfos:
        items:
          $ref: '#/definitions/load.LoadTestExecutionHttpInfoResult'
        type: array
      loadTestExecutionState:
        $ref: '#/definitions/load.LoadTestExecutionStateResult'
      loadTestKey:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      testName:
        type: string
      virtualUsers:
        type: string
    type: object
  load.LoadTestExecutionStateResult:
    properties:
      compileDuration:
        type: string
      createdAt:
        type: string
      executionDuration:
        type: string
      executionStatus:
        $ref: '#/definitions/constant.ExecutionStatus'
      expectedFinishAt:
        type: string
      failureMessage:
        type: string
      finishAt:
        type: string
      iconCode:
        $ref: '#/definitions/constant.IconCode'
      id:
        type: integer
      loadGeneratorInstallInfo:
        $ref: '#/definitions/load.LoadGeneratorInstallInfoResult'
      loadGeneratorInstallInfoId:
        type: integer
      loadTestKey:
        type: string
      startAt:
        type: string
      totalExpectedExecutionSecond:
        type: integer
      updatedAt:
        type: string
    type: object
  load.LoadTestScenarioCatalogResult:
    properties:
      createdAt:
        type: string
      description:
        type: string
      duration:
        type: string
      id:
        type: integer
      name:
        type: string
      rampUpSteps:
        type: string
      rampUpTime:
        type: string
      updatedAt:
        type: string
      virtualUsers:
        type: string
    type: object
  load.LoadTestStatistics:
    properties:
      average:
        type: number
      errorPercent:
        type: number
      label:
        type: string
      maxTime:
        type: number
      median:
        type: number
      minTime:
        type: number
      ninetyFive:
        type: number
      ninetyNine:
        type: number
      ninetyPercent:
        type: number
      receivedKB:
        type: number
      requestCount:
        type: integer
      sentKB:
        type: number
      throughput:
        type: number
    type: object
  load.MetricsRawData:
    properties:
      isError:
        type: boolean
      timestamp:
        type: string
      unit:
        type: string
      value:
        type: string
    type: object
  load.MetricsSummary:
    properties:
      label:
        type: string
      metrics:
        items:
          $ref: '#/definitions/load.MetricsRawData'
        type: array
    type: object
  load.MonitoringAgentInstallationResult:
    properties:
      agentType:
        type: string
      createdAt:
        type: string
      id:
        type: integer
      mciId:
        type: string
      nsId:
        type: string
      status:
        type: string
      updatedAt:
        type: string
      username:
        type: string
      vmCount:
        type: integer
      vmId:
        type: string
    type: object
  load.ResultRawData:
    properties:
      bytes:
        type: integer
      connection:
        description: time to establish connection
        type: integer
      elapsed:
        description: time to last byte
        type: integer
      idleTime:
        description: time not spent sampling in jmeter (milliseconds) (generally 0)
        type: integer
      isError:
        type: boolean
      latency:
        description: time to first byte
        type: integer
      "no":
        type: integer
      sentBytes:
        type: integer
      timestamp:
        type: string
      url:
        type: string
    type: object
  load.ResultSummary:
    properties:
      label:
        type: string
      results:
        items:
          $ref: '#/definitions/load.ResultRawData'
        type: array
    type: object
  load.UpdateLoadTestScenarioCatalogReq:
    properties:
      description:
        example: Updated load test scenario catalog template
        type: string
      duration:
        example: "600"
        type: string
      name:
        example: Updated Load Test Scenario
        type: string
      rampUpSteps:
        example: "10"
        type: string
      rampUpTime:
        example: "120"
        type: string
      virtualUsers:
        example: "20"
        type: string
    type: object
info:
  contact: {}
  description: CM-ANT REST API swagger document.
  title: CM-ANT REST API
  version: 0.2.2
paths:
  /api/v1/cost/estimate:
    get:
      consumes:
      - application/json
      description: Fetch estimated cost details based on provider, region, instance
        type, and resource specifications. Pagination support is provided through
        `Page` and `Size` parameters.
      operationId: GetEstimateCost
      parameters:
      - description: Cloud provider name to filter estimated costs
        in: query
        name: providerName
        type: string
      - description: Region name to filter estimated costs
        in: query
        name: regionName
        type: string
      - description: Instance type to filter estimated costs
        in: query
        name: instanceType
        type: string
      - description: Number of vCPUs to filter estimated costs
        in: query
        name: vCpu
        type: string
      - description: Memory size to filter estimated costs
        in: query
        name: memory
        type: string
      - description: Operating system type to filter estimated costs
        in: query
        name: osType
        type: string
      - description: 'Page number for pagination (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of records per page (default: 100, max: 100)'
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved estimated cost information
          schema:
            $ref: '#/definitions/app.AntResponse-cost_EstimateCostInfoResults'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve estimated cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Retrieve Estimated Cost Information
      tags:
      - '[Cost Estimate]'
    post:
      consumes:
      - application/json
      description: Update the estimate cost based on provided specifications and retrieve
        the updated cost estimation. Required fields for each specification include
        `ProviderName`, `RegionName`, and `InstanceType`. Specifications can also
        be provided in a formatted string using `+` delimiter.
      operationId: UpdateAndGetEstimateCost
      parameters:
      - description: Request body for updating and retrieving estimated cost information
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.UpdateAndGetEstimateCostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated and retrieved estimated cost information
          schema:
            $ref: '#/definitions/app.AntResponse-cost_EstimateCostResults'
        "400":
          description: Invalid request parameters or format
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to update or retrieve estimated cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Update and Retrieve Estimated Cost Information
      tags:
      - '[Cost Estimate]'
  /api/v1/cost/estimate/forecast:
    get:
      consumes:
      - application/json
      description: Fetch estimated forecast cost data based on specified parameters,
        including a date range that must be within 6 months. Supports pagination and
        filtering by namespace IDs, migration configuration IDs, and resource types.
      operationId: GetEstimateForecastCost
      parameters:
      - description: Start date for the forecast cost retrieval in 'YYYY-MM-DD' format
        in: query
        name: startDate
        required: true
        type: string
      - description: End date for the forecast cost retrieval in 'YYYY-MM-DD' format
        in: query
        name: endDate
        required: true
        type: string
      - collectionFormat: csv
        description: List of namespace IDs to filter forecast cost information
        in: query
        items:
          type: string
        name: nsIds
        type: array
      - collectionFormat: csv
        description: List of migration configuration IDs to filter forecast cost information
        in: query
        items:
          type: string
        name: mciIds
        type: array
      - collectionFormat: csv
        description: List of cloud providers to filter forecast cost information
        in: query
        items:
          type: string
        name: providers
        type: array
      - collectionFormat: csv
        description: List of resource types to filter forecast cost information
        in: query
        items:
          type: string
        name: resourceTypes
        type: array
      - collectionFormat: csv
        description: List of resource IDs to filter forecast cost information
        in: query
        items:
          type: string
        name: resourceIds
        type: array
      - description: Type of cost aggregation (e.g., 'daily', 'weekly', 'monthly')
        in: query
        name: costAggregationType
        type: string
      - description: Order of dates in the result (e.g., 'asc', 'desc')
        in: query
        name: dateOrder
        type: string
      - description: Order of resource types in the result (e.g., 'asc', 'desc')
        in: query
        name: resourceTypeOrder
        type: string
      - description: 'Page number for pagination (default: 1)'
        in: query
        name: page
        type: integer
      - description: 'Number of records per page (default: 10000, max: 10000)'
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved estimated forecast cost information
          schema:
            $ref: '#/definitions/app.AntResponse-cost_GetEstimateForecastCostInfoResults'
        "400":
          description: Invalid request parameters or date format errors
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve estimated forecast cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Retrieve Estimated Forecast Cost Information
      tags:
      - '[Cost Estimate]'
    post:
      consumes:
      - application/json
      description: Update and retrieve forecasted cost estimates for a specified namespace
        and migration configuration ID over the past 14 days.
      operationId: UpdateEstimateForecastCost
      parameters:
      - description: Request body containing NsId (Namespace ID) and MciId (Migration
          Configuration ID) for cost estimation forecast
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.UpdateEstimateForecastCostReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated and retrieved estimated forecast cost
            information
          schema:
            $ref: '#/definitions/app.AntResponse-cost_UpdateEstimateForecastCostInfoResult'
        "400":
          description: Request body binding error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to update or retrieve forecast cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Update and Retrieve Estimated Forecast Cost
      tags:
      - '[Cost Estimate]'
  /api/v1/cost/estimate/forecast/raw:
    post:
      consumes:
      - application/json
      description: Update and retrieve raw forecasted cost estimates for specified
        cost resources and additional AWS information over the past 14 days.
      operationId: UpdateEstimateForecastCostRaw
      parameters:
      - description: Request body containing details for cost estimation forecast
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.UpdateEstimateForecastCostRawReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated and retrieved raw estimated forecast cost
            information in raw data
          schema:
            $ref: '#/definitions/app.AntResponse-cost_UpdateEstimateForecastCostInfoResult'
        "400":
          description: Migrated resource id list is required
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Error updating or retrieving forecast cost information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Update and Retrieve Raw Estimated Forecast Cost
      tags:
      - '[Cost Estimate]'
  /api/v1/load/generators:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all installed load generators with pagination
        support.
      operationId: GetAllLoadGeneratorInstallInfo
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      - description: Filter by status
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Generator Install Info
      tags:
      - '[Load Generator Management]'
    post:
      consumes:
      - application/json
      description: Install a load generator either locally or remotely.
      operationId: InstallLoadGenerator
      parameters:
      - description: Load Generator Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.InstallLoadGeneratorReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed load generator
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadGeneratorInstallInfoResult'
        "400":
          description: Load generator installation info is not correct.| available
            install locations are remote or local.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Load Generator
      tags:
      - '[Load Generator Management]'
  /api/v1/load/generators/{loadGeneratorInstallInfoId}:
    delete:
      consumes:
      - application/json
      description: Uninstall a previously installed load generator.
      operationId: UninstallLoadGenerator
      parameters:
      - description: load generator install info id
        in: path
        name: loadGeneratorInstallInfoId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uninstall load generator
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: Load generator install info id must be number.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Load Generator
      tags:
      - '[Load Generator Management]'
  /api/v1/load/monitoring/agent:
    get:
      consumes:
      - application/json
      description: Retrieve monitoring agent information based on specified criteria.
      operationId: GetAllMonitoringAgentInfos
      parameters:
      - description: Namespace ID
        in: query
        name: nsId
        type: string
      - description: MCI ID
        in: query
        name: mciId
        type: string
      - description: VM ID
        in: query
        name: vmId
        type: string
      - description: Number of results per page
        in: query
        name: size
        type: integer
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved monitoring agent information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllMonitoringAgentInfoResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Retrieve Monitoring Agent Information
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/monitoring/agent/install:
    post:
      consumes:
      - application/json
      description: Install a monitoring agent on specific mci.
      operationId: InstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Installation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully installed monitoring agent
          schema:
            $ref: '#/definitions/app.AntResponse-load_MonitoringAgentInstallationResult'
        "400":
          description: Monitoring agent installation info is not correct.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Install Metrics Monitoring Agent
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/monitoring/agent/uninstall:
    post:
      consumes:
      - application/json
      description: Uninstall monitoring agents from specified VMs or all VMs in an
        mci.
      operationId: UninstallMonitoringAgent
      parameters:
      - description: Monitoring Agent Uninstallation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.MonitoringAgentInstallationReq'
      produces:
      - application/json
      responses:
        "200":
          description: Number of affected results
          schema:
            $ref: '#/definitions/app.AntResponse-int64'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Uninstall Monitoring Agents
      tags:
      - '[Monitoring Agent Management]'
  /api/v1/load/templates/test-scenario-catalogs:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test scenario catalogs with pagination
        support.
      operationId: GetAllLoadTestScenarioCatalogs
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 100)
        in: query
        name: size
        type: integer
      - description: Filter by catalog name
        in: query
        name: name
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test scenario catalogs
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestScenarioCatalogsResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test scenario catalogs
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Scenario Catalogs
      tags:
      - '[Load Test Scenario Catalog Management]'
    post:
      consumes:
      - application/json
      description: Create a new load test scenario catalog template with the provided
        configuration.
      operationId: CreateLoadTestScenarioCatalog
      parameters:
      - description: Load Test Scenario Catalog Creation Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/load.CreateLoadTestScenarioCatalogReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully created load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestScenarioCatalogResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to create load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Create Load Test Scenario Catalog
      tags:
      - '[Load Test Scenario Catalog Management]'
  /api/v1/load/templates/test-scenario-catalogs/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a load test scenario catalog by ID.
      operationId: DeleteLoadTestScenarioCatalog
      parameters:
      - description: Load Test Scenario Catalog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully deleted load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "404":
          description: Load test scenario catalog not found
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to delete load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Delete Load Test Scenario Catalog
      tags:
      - '[Load Test Scenario Catalog Management]'
    get:
      consumes:
      - application/json
      description: Retrieve a specific load test scenario catalog by ID.
      operationId: GetLoadTestScenarioCatalog
      parameters:
      - description: Load Test Scenario Catalog ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestScenarioCatalogResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "404":
          description: Load test scenario catalog not found
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Load Test Scenario Catalog
      tags:
      - '[Load Test Scenario Catalog Management]'
    put:
      consumes:
      - application/json
      description: Update an existing load test scenario catalog with the provided
        configuration.
      operationId: UpdateLoadTestScenarioCatalog
      parameters:
      - description: Load Test Scenario Catalog ID
        in: path
        name: id
        required: true
        type: integer
      - description: Load Test Scenario Catalog Update Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/load.UpdateLoadTestScenarioCatalogReq'
      produces:
      - application/json
      responses:
        "200":
          description: Successfully updated load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestScenarioCatalogResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "404":
          description: Load test scenario catalog not found
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to update load test scenario catalog
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Update Load Test Scenario Catalog
      tags:
      - '[Load Test Scenario Catalog Management]'
  /api/v1/load/tests/infos:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test execution information with pagination
        support.
      operationId: GetAllLoadTestExecutionInfos
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestExecutionInfosResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve all load test execution information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Execution Information
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/infos/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Retrieve the load test execution state information for a specific
        load test key.
      operationId: GetLoadTestExecutionInfo
      parameters:
      - description: Load test key
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestExecutionInfoResult'
        "400":
          description: Load test key must be set.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Load Test Execution State
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/result:
    get:
      consumes:
      - application/json
      description: Retrieve load test result based on provided parameters.
      operationId: GetLoadTestResult
      parameters:
      - description: Load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      - description: Result format (normal or aggregate)
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test metrics
          schema:
            allOf:
            - $ref: '#/definitions/app.JsonResult'
            - properties:
                '[aggregate]':
                  $ref: '#/definitions/app.AntResponse-array_load_LoadTestStatistics'
                '[normal]':
                  $ref: '#/definitions/app.AntResponse-array_load_ResultSummary'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test result
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get load test result
      tags:
      - '[Load Test Result]'
  /api/v1/load/tests/result/last:
    get:
      consumes:
      - application/json
      description: Retrieve last load test result based on provided parameters.
      operationId: GetLastLoadTestResult
      parameters:
      - description: ns id
        in: query
        name: nsId
        required: true
        type: string
      - description: mci id
        in: query
        name: mciId
        required: true
        type: string
      - description: vm id
        in: query
        name: vmId
        required: true
        type: string
      - description: Result format (normal or aggregate)
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test metrics
          schema:
            allOf:
            - $ref: '#/definitions/app.JsonResult'
            - properties:
                '[aggregate]':
                  $ref: '#/definitions/app.AntResponse-array_load_LoadTestStatistics'
                '[normal]':
                  $ref: '#/definitions/app.AntResponse-array_load_ResultSummary'
              type: object
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test result
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get last load test result by ns, mci, vm
      tags:
      - '[Load Test Result]'
  /api/v1/load/tests/result/metrics:
    get:
      consumes:
      - application/json
      description: Retrieve load test metrics based on provided parameters.
      operationId: GetLoadTestMetrics
      parameters:
      - description: Load test key
        in: query
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test metrics
          schema:
            $ref: '#/definitions/app.AntResponse-array_load_MetricsSummary'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test metrics
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get load test metrics
      tags:
      - '[Load Test Result]'
  /api/v1/load/tests/result/metrics/last:
    get:
      consumes:
      - application/json
      description: Retrieve last load test metrics based on provided parameters.
      operationId: GetLastLoadTestMetrics
      parameters:
      - description: ns id
        in: query
        name: nsId
        required: true
        type: string
      - description: mci id
        in: query
        name: mciId
        required: true
        type: string
      - description: vm id
        in: query
        name: vmId
        required: true
        type: string
      - description: Result format (normal for the moment)
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test metrics
          schema:
            $ref: '#/definitions/app.AntResponse-array_load_MetricsSummary'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test metrics
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get last load test metrics by ns, mci, vm
      tags:
      - '[Load Test Result]'
  /api/v1/load/tests/run:
    post:
      consumes:
      - application/json
      description: Start a load test using the provided load test configuration.
      operationId: RunLoadTest
      parameters:
      - description: Run Load Test Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.RunLoadTestReq'
      produces:
      - application/json
      responses:
        "200":
          description: '{loadTestKey}'
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: load test install location is invalid.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Run Load Test
      tags:
      - '[Load Test Execution Management]'
  /api/v1/load/tests/state:
    get:
      consumes:
      - application/json
      description: Retrieve a list of all load test execution states with pagination
        support.
      operationId: GetAllLoadTestExecutionState
      parameters:
      - description: Page number for pagination (default 1)
        in: query
        name: page
        type: integer
      - description: Number of items per page (default 10, max 10)
        in: query
        name: size
        type: integer
      - description: Filter by load test key
        in: query
        name: loadTestKey
        type: string
      - description: Filter by execution status
        in: query
        name: executionStatus
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_GetAllLoadTestExecutionStateResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get All Load Test Execution State
      tags:
      - '[Load Test State Management]'
  /api/v1/load/tests/state/{loadTestKey}:
    get:
      consumes:
      - application/json
      description: Retrieve a load test execution state by load test key.
      operationId: GetLoadTestExecutionState
      parameters:
      - description: Load test key
        in: path
        name: loadTestKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestExecutionStateResult'
        "400":
          description: Load test key must be set.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Load Test Execution State
      tags:
      - '[Load Test State Management]'
  /api/v1/load/tests/state/last:
    get:
      consumes:
      - application/json
      description: Retrieve a last load test execution state by given ids.
      operationId: GetLastLoadTestExecutionState
      parameters:
      - description: nsId
        in: query
        name: nsId
        required: true
        type: string
      - description: mciId
        in: query
        name: mciId
        required: true
        type: string
      - description: Load test key
        in: query
        name: vmId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully retrieved load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-load_LoadTestExecutionStateResult'
        "400":
          description: Invalid request parameters
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: Failed to retrieve load test execution state information
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Get Last Load Test Execution State
      tags:
      - '[Load Test State Management]'
  /api/v1/load/tests/stop:
    post:
      consumes:
      - application/json
      description: Stop a running load test using the provided load test key.
      operationId: StopLoadTest
      parameters:
      - description: Stop Load Test Request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/app.StopLoadTestReq'
      produces:
      - application/json
      responses:
        "200":
          description: done
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "400":
          description: load test running info is not correct.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
        "500":
          description: ant server has got error. please try again.
          schema:
            $ref: '#/definitions/app.AntResponse-string'
      summary: Stop Load Test
      tags:
      - '[Load Test Execution Management]'
  /readyz:
    get:
      consumes:
      - application/json
      description: This endpoint checks if the CB-Ant API server is ready by verifying
        the status of both the load service and the cost service. If either service
        is unavailable, it returns a 503 status indicating the server is not ready.
      operationId: AntServerReadiness
      produces:
      - application/json
      responses:
        "200":
          description: CM-Ant API server is ready
          schema:
            additionalProperties:
              type: string
            type: object
        "503":
          description: CB-Ant API server is not ready
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Check CB-Ant API server readiness
      tags:
      - '[Server Health]'
swagger: "2.0"
