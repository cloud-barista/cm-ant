{
    "swagger": "2.0",
    "info": {
        "description": "CM-ANT REST API swagger document.",
        "title": "CM-ANT REST API",
        "contact": {},
        "version": "0.3.4"
    },
    "basePath": "/ant",
    "paths": {
        "/api/v1/cost/estimate": {
            "get": {
                "description": "Fetch estimated cost details based on provider, region, instance type, and resource specifications. Pagination support is provided through `Page` and `Size` parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cost Estimate]"
                ],
                "summary": "Retrieve Estimated Cost Information",
                "operationId": "GetEstimateCost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cloud provider name to filter estimated costs",
                        "name": "providerName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Region name to filter estimated costs",
                        "name": "regionName",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Instance type to filter estimated costs",
                        "name": "instanceType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Number of vCPUs to filter estimated costs",
                        "name": "vCpu",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Memory size to filter estimated costs",
                        "name": "memory",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Operating system type to filter estimated costs",
                        "name": "osType",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default: 100, max: 100)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved estimated cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-cost_EstimateCostInfoResults"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve estimated cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            },
            "post": {
                "description": "Update the estimate cost based on provided specifications and retrieve the updated cost estimation. Required fields for each specification include `ProviderName`, `RegionName`, and `InstanceType`. Specifications can also be provided in a formatted string using `+` delimiter.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cost Estimate]"
                ],
                "summary": "Update and Retrieve Estimated Cost Information",
                "operationId": "UpdateAndGetEstimateCost",
                "parameters": [
                    {
                        "description": "Request body for updating and retrieving estimated cost information",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.UpdateAndGetEstimateCostReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated and retrieved estimated cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-cost_EstimateCostResults"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or format",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to update or retrieve estimated cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/cost/estimate/forecast": {
            "get": {
                "description": "Fetch estimated forecast cost data based on specified parameters, including a date range that must be within 6 months. Supports pagination and filtering by namespace IDs, migration configuration IDs, and resource types.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cost Estimate]"
                ],
                "summary": "Retrieve Estimated Forecast Cost Information",
                "operationId": "GetEstimateForecastCost",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Start date for the forecast cost retrieval in 'YYYY-MM-DD' format",
                        "name": "startDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "End date for the forecast cost retrieval in 'YYYY-MM-DD' format",
                        "name": "endDate",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of namespace IDs to filter forecast cost information",
                        "name": "nsIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of migration configuration IDs to filter forecast cost information",
                        "name": "mciIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of cloud providers to filter forecast cost information",
                        "name": "providers",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of resource types to filter forecast cost information",
                        "name": "resourceTypes",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "description": "List of resource IDs to filter forecast cost information",
                        "name": "resourceIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Type of cost aggregation (e.g., 'daily', 'weekly', 'monthly')",
                        "name": "costAggregationType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order of dates in the result (e.g., 'asc', 'desc')",
                        "name": "dateOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order of resource types in the result (e.g., 'asc', 'desc')",
                        "name": "resourceTypeOrder",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default: 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records per page (default: 10000, max: 10000)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved estimated forecast cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-cost_GetEstimateForecastCostInfoResults"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters or date format errors",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve estimated forecast cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            },
            "post": {
                "description": "Update and retrieve forecasted cost estimates for a specified namespace and migration configuration ID over the past 14 days.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cost Estimate]"
                ],
                "summary": "Update and Retrieve Estimated Forecast Cost",
                "operationId": "UpdateEstimateForecastCost",
                "parameters": [
                    {
                        "description": "Request body containing NsId (Namespace ID) and MciId (Migration Configuration ID) for cost estimation forecast",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.UpdateEstimateForecastCostReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated and retrieved estimated forecast cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-cost_UpdateEstimateForecastCostInfoResult"
                        }
                    },
                    "400": {
                        "description": "Request body binding error",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to update or retrieve forecast cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/cost/estimate/forecast/raw": {
            "post": {
                "description": "Update and retrieve raw forecasted cost estimates for specified cost resources and additional AWS information over the past 14 days.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Cost Estimate]"
                ],
                "summary": "Update and Retrieve Raw Estimated Forecast Cost",
                "operationId": "UpdateEstimateForecastCostRaw",
                "parameters": [
                    {
                        "description": "Request body containing details for cost estimation forecast",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.UpdateEstimateForecastCostRawReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated and retrieved raw estimated forecast cost information in raw data",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-cost_UpdateEstimateForecastCostInfoResult"
                        }
                    },
                    "400": {
                        "description": "Migrated resource id list is required",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Error updating or retrieving forecast cost information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/generators": {
            "get": {
                "description": "Retrieve a list of all installed load generators with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Generator Management]"
                ],
                "summary": "Get All Load Generator Install Info",
                "operationId": "GetAllLoadGeneratorInstallInfo",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 10, max 10)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved monitoring agent information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve monitoring agent information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            },
            "post": {
                "description": "Install a load generator either locally or remotely.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Generator Management]"
                ],
                "summary": "Install Load Generator",
                "operationId": "InstallLoadGenerator",
                "parameters": [
                    {
                        "description": "Load Generator Installation Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.InstallLoadGeneratorReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully installed load generator",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadGeneratorInstallInfoResult"
                        }
                    },
                    "400": {
                        "description": "Load generator installation info is not correct.| available install locations are remote or local.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/generators/{loadGeneratorInstallInfoId}": {
            "delete": {
                "description": "Uninstall a previously installed load generator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Generator Management]"
                ],
                "summary": "Uninstall Load Generator",
                "operationId": "UninstallLoadGenerator",
                "parameters": [
                    {
                        "type": "string",
                        "description": "load generator install info id",
                        "name": "loadGeneratorInstallInfoId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully uninstall load generator",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "400": {
                        "description": "Load generator install info id must be number.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "ant server has got error. please try again.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/monitoring/agent": {
            "get": {
                "description": "Retrieve monitoring agent information based on specified criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Monitoring Agent Management]"
                ],
                "summary": "Retrieve Monitoring Agent Information",
                "operationId": "GetAllMonitoringAgentInfos",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Namespace ID",
                        "name": "nsId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "MCI ID",
                        "name": "mciId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "VM ID",
                        "name": "vmId",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of results per page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number for pagination",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved monitoring agent information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_GetAllMonitoringAgentInfoResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/monitoring/agent/install": {
            "post": {
                "description": "Install a monitoring agent on specific mci.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Monitoring Agent Management]"
                ],
                "summary": "Install Metrics Monitoring Agent",
                "operationId": "InstallMonitoringAgent",
                "parameters": [
                    {
                        "description": "Monitoring Agent Installation Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.MonitoringAgentInstallationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully installed monitoring agent",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_MonitoringAgentInstallationResult"
                        }
                    },
                    "400": {
                        "description": "Monitoring agent installation info is not correct.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/monitoring/agent/uninstall": {
            "post": {
                "description": "Uninstall monitoring agents from specified VMs or all VMs in an mci.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Monitoring Agent Management]"
                ],
                "summary": "Uninstall Monitoring Agents",
                "operationId": "UninstallMonitoringAgent",
                "parameters": [
                    {
                        "description": "Monitoring Agent Uninstallation Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.MonitoringAgentInstallationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Number of affected results",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-int64"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/templates/test-scenario-catalogs": {
            "get": {
                "description": "Retrieve a list of all load test scenario catalogs with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Scenario Catalog Management]"
                ],
                "summary": "Get All Load Test Scenario Catalogs",
                "operationId": "GetAllLoadTestScenarioCatalogs",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 10, max 100)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by catalog name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test scenario catalogs",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_GetAllLoadTestScenarioCatalogsResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test scenario catalogs",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new load test scenario catalog template with the provided configuration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Scenario Catalog Management]"
                ],
                "summary": "Create Load Test Scenario Catalog",
                "operationId": "CreateLoadTestScenarioCatalog",
                "parameters": [
                    {
                        "description": "Load Test Scenario Catalog Creation Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/load.CreateLoadTestScenarioCatalogReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully created load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadTestScenarioCatalogResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to create load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/templates/test-scenario-catalogs/{id}": {
            "get": {
                "description": "Retrieve a specific load test scenario catalog by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Scenario Catalog Management]"
                ],
                "summary": "Get Load Test Scenario Catalog",
                "operationId": "GetLoadTestScenarioCatalog",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Load Test Scenario Catalog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadTestScenarioCatalogResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "404": {
                        "description": "Load test scenario catalog not found",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing load test scenario catalog with the provided configuration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Scenario Catalog Management]"
                ],
                "summary": "Update Load Test Scenario Catalog",
                "operationId": "UpdateLoadTestScenarioCatalog",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Load Test Scenario Catalog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Load Test Scenario Catalog Update Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/load.UpdateLoadTestScenarioCatalogReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadTestScenarioCatalogResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "404": {
                        "description": "Load test scenario catalog not found",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to update load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a load test scenario catalog by ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Scenario Catalog Management]"
                ],
                "summary": "Delete Load Test Scenario Catalog",
                "operationId": "DeleteLoadTestScenarioCatalog",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Load Test Scenario Catalog ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "404": {
                        "description": "Load test scenario catalog not found",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to delete load test scenario catalog",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/infos": {
            "get": {
                "description": "Retrieve a list of all load test execution information with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Execution Management]"
                ],
                "summary": "Get All Load Test Execution Information",
                "operationId": "GetAllLoadTestExecutionInfos",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 10, max 10)",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test execution information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_GetAllLoadTestExecutionInfosResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve all load test execution information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/infos/{loadTestKey}": {
            "get": {
                "description": "Retrieve the load test execution state information for a specific load test key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Execution Management]"
                ],
                "summary": "Get Load Test Execution State",
                "operationId": "GetLoadTestExecutionInfo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Load test key",
                        "name": "loadTestKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadTestExecutionInfoResult"
                        }
                    },
                    "400": {
                        "description": "Load test key must be set.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/result": {
            "get": {
                "description": "Retrieve load test result based on provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Result]"
                ],
                "summary": "Get load test result",
                "operationId": "GetLoadTestResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Load test key",
                        "name": "loadTestKey",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Result format (normal or aggregate)",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test metrics",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.JsonResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[aggregate]": {
                                            "$ref": "#/definitions/app.AntResponse-array_load_LoadTestStatistics"
                                        },
                                        "[normal]": {
                                            "$ref": "#/definitions/app.AntResponse-array_load_ResultSummary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test result",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/result/last": {
            "get": {
                "description": "Retrieve last load test result based on provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Result]"
                ],
                "summary": "Get last load test result by ns, mci, vm",
                "operationId": "GetLastLoadTestResult",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ns id",
                        "name": "nsId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mci id",
                        "name": "mciId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vm id",
                        "name": "vmId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Result format (normal or aggregate)",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test metrics",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/app.JsonResult"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "[aggregate]": {
                                            "$ref": "#/definitions/app.AntResponse-array_load_LoadTestStatistics"
                                        },
                                        "[normal]": {
                                            "$ref": "#/definitions/app.AntResponse-array_load_ResultSummary"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test result",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/result/metrics": {
            "get": {
                "description": "Retrieve load test metrics based on provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Result]"
                ],
                "summary": "Get load test metrics",
                "operationId": "GetLoadTestMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Load test key",
                        "name": "loadTestKey",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test metrics",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-array_load_MetricsSummary"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test metrics",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/result/metrics/last": {
            "get": {
                "description": "Retrieve last load test metrics based on provided parameters.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Result]"
                ],
                "summary": "Get last load test metrics by ns, mci, vm",
                "operationId": "GetLastLoadTestMetrics",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ns id",
                        "name": "nsId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mci id",
                        "name": "mciId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "vm id",
                        "name": "vmId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Result format (normal for the moment)",
                        "name": "format",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test metrics",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-array_load_MetricsSummary"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test metrics",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/run": {
            "post": {
                "description": "Start a load test using the provided load test configuration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Execution Management]"
                ],
                "summary": "Run Load Test",
                "operationId": "RunLoadTest",
                "parameters": [
                    {
                        "description": "Run Load Test Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.RunLoadTestReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{loadTestKey}",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "400": {
                        "description": "load test install location is invalid.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "ant server has got error. please try again.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/state": {
            "get": {
                "description": "Retrieve a list of all load test execution states with pagination support.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test State Management]"
                ],
                "summary": "Get All Load Test Execution State",
                "operationId": "GetAllLoadTestExecutionState",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number for pagination (default 1)",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of items per page (default 10, max 10)",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by load test key",
                        "name": "loadTestKey",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by execution status",
                        "name": "executionStatus",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_GetAllLoadTestExecutionStateResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/state/last": {
            "get": {
                "description": "Retrieve a last load test execution state by given ids.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test State Management]"
                ],
                "summary": "Get Last Load Test Execution State",
                "operationId": "GetLastLoadTestExecutionState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "nsId",
                        "name": "nsId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "mciId",
                        "name": "mciId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Load test key",
                        "name": "vmId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadTestExecutionStateResult"
                        }
                    },
                    "400": {
                        "description": "Invalid request parameters",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/state/{loadTestKey}": {
            "get": {
                "description": "Retrieve a load test execution state by load test key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test State Management]"
                ],
                "summary": "Get Load Test Execution State",
                "operationId": "GetLoadTestExecutionState",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Load test key",
                        "name": "loadTestKey",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-load_LoadTestExecutionStateResult"
                        }
                    },
                    "400": {
                        "description": "Load test key must be set.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve load test execution state information",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/api/v1/load/tests/stop": {
            "post": {
                "description": "Stop a running load test using the provided load test key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Load Test Execution Management]"
                ],
                "summary": "Stop Load Test",
                "operationId": "StopLoadTest",
                "parameters": [
                    {
                        "description": "Stop Load Test Request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/app.StopLoadTestReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "done",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "400": {
                        "description": "load test running info is not correct.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    },
                    "500": {
                        "description": "ant server has got error. please try again.",
                        "schema": {
                            "$ref": "#/definitions/app.AntResponse-string"
                        }
                    }
                }
            }
        },
        "/readyz": {
            "get": {
                "description": "This endpoint checks if the CB-Ant API server is ready by verifying the status of both the load service and the cost service. If either service is unavailable, it returns a 503 status indicating the server is not ready.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "[Server Health]"
                ],
                "summary": "Check CB-Ant API server readiness",
                "operationId": "AntServerReadiness",
                "responses": {
                    "200": {
                        "description": "CM-Ant API server is ready",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "503": {
                        "description": "CB-Ant API server is not ready",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "app.AntResponse-array_load_LoadTestStatistics": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadTestStatistics"
                    }
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-array_load_MetricsSummary": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.MetricsSummary"
                    }
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-array_load_ResultSummary": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.ResultSummary"
                    }
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-cost_EstimateCostInfoResults": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/cost.EstimateCostInfoResults"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-cost_EstimateCostResults": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/cost.EstimateCostResults"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-cost_GetEstimateForecastCostInfoResults": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/cost.GetEstimateForecastCostInfoResults"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-cost_UpdateEstimateForecastCostInfoResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/cost.UpdateEstimateForecastCostInfoResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-int64": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "type": "integer"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_GetAllLoadGeneratorInstallInfoResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.GetAllLoadGeneratorInstallInfoResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_GetAllLoadTestExecutionInfosResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.GetAllLoadTestExecutionInfosResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_GetAllLoadTestExecutionStateResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.GetAllLoadTestExecutionStateResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_GetAllLoadTestScenarioCatalogsResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.GetAllLoadTestScenarioCatalogsResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_GetAllMonitoringAgentInfoResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.GetAllMonitoringAgentInfoResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_LoadGeneratorInstallInfoResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.LoadGeneratorInstallInfoResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_LoadTestExecutionInfoResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.LoadTestExecutionInfoResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_LoadTestExecutionStateResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.LoadTestExecutionStateResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_LoadTestScenarioCatalogResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.LoadTestScenarioCatalogResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-load_MonitoringAgentInstallationResult": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "$ref": "#/definitions/load.MonitoringAgentInstallationResult"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AntResponse-string": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "result": {
                    "type": "string"
                },
                "successMessage": {
                    "type": "string"
                }
            }
        },
        "app.AwsAdditionalInfoReq": {
            "type": "object",
            "properties": {
                "ownerId": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "app.CostResourceReq": {
            "type": "object",
            "properties": {
                "resourceIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "resourceType": {
                    "$ref": "#/definitions/constant.ResourceType"
                }
            }
        },
        "app.InstallLoadGeneratorReq": {
            "type": "object",
            "properties": {
                "installLocation": {
                    "$ref": "#/definitions/constant.InstallLocation"
                }
            }
        },
        "app.JsonResult": {
            "type": "object"
        },
        "app.MonitoringAgentInstallationReq": {
            "type": "object",
            "properties": {
                "mciId": {
                    "type": "string"
                },
                "nsId": {
                    "type": "string"
                },
                "vmIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "app.RunLoadGeneratorHttpReq": {
            "type": "object",
            "required": [
                "bodyData",
                "hostname",
                "method",
                "path",
                "port",
                "protocol"
            ],
            "properties": {
                "bodyData": {
                    "description": "{\"xxx\": \"tttt\", \"wwwww\": \"wotjkenr\"}",
                    "type": "string"
                },
                "hostname": {
                    "description": "xx.xx.xx.xx or asx.bbb.com",
                    "type": "string"
                },
                "method": {
                    "description": "GET or POST",
                    "type": "string"
                },
                "path": {
                    "description": "/xxx/www/sss or possibly empty",
                    "type": "string"
                },
                "port": {
                    "description": "1 ~ 65353",
                    "type": "string"
                },
                "protocol": {
                    "description": "http or https",
                    "type": "string"
                }
            }
        },
        "app.RunLoadTestReq": {
            "type": "object",
            "properties": {
                "agentHostname": {
                    "description": "basically, it is same as host for vm",
                    "type": "string"
                },
                "collectAdditionalSystemMetrics": {
                    "description": "agent tcp default port is 5555",
                    "type": "boolean"
                },
                "duration": {
                    "type": "string"
                },
                "httpReqs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.RunLoadGeneratorHttpReq"
                    }
                },
                "installLoadGenerator": {
                    "description": "localhost for installing load generator; local | remote",
                    "allOf": [
                        {
                            "$ref": "#/definitions/app.InstallLoadGeneratorReq"
                        }
                    ]
                },
                "loadGeneratorInstallInfoId": {
                    "description": "if already installed load generator simply put this field",
                    "type": "integer"
                },
                "mciId": {
                    "description": "for metadata usage",
                    "type": "string"
                },
                "nsId": {
                    "description": "for validate agent host and connect to tumblebug resources",
                    "type": "string"
                },
                "rampUpSteps": {
                    "type": "string"
                },
                "rampUpTime": {
                    "type": "string"
                },
                "testName": {
                    "description": "test scenario",
                    "type": "string"
                },
                "virtualUsers": {
                    "type": "string"
                },
                "vmId": {
                    "description": "for metadata usage",
                    "type": "string"
                }
            }
        },
        "app.StopLoadTestReq": {
            "type": "object",
            "properties": {
                "loadTestKey": {
                    "type": "string"
                },
                "mciId": {
                    "type": "string"
                },
                "nsId": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "app.UpdateAndGetEstimateCostReq": {
            "type": "object",
            "properties": {
                "specs": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "instanceType",
                            "providerName",
                            "regionName"
                        ],
                        "properties": {
                            "image": {
                                "type": "string"
                            },
                            "instanceType": {
                                "type": "string"
                            },
                            "providerName": {
                                "type": "string"
                            },
                            "regionName": {
                                "type": "string"
                            }
                        }
                    }
                },
                "specsWithFormat": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "commonSpec"
                        ],
                        "properties": {
                            "commonImage": {
                                "type": "string"
                            },
                            "commonSpec": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "app.UpdateEstimateForecastCostRawReq": {
            "type": "object",
            "required": [
                "costResources"
            ],
            "properties": {
                "awsAdditionalInfo": {
                    "$ref": "#/definitions/app.AwsAdditionalInfoReq"
                },
                "costResources": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/app.CostResourceReq"
                    }
                }
            }
        },
        "app.UpdateEstimateForecastCostReq": {
            "type": "object",
            "properties": {
                "mciId": {
                    "type": "string"
                },
                "nsId": {
                    "type": "string"
                }
            }
        },
        "constant.ExecutionStatus": {
            "type": "string",
            "enum": [
                "on_processing",
                "on_fetching",
                "successed",
                "test_failed"
            ],
            "x-enum-varnames": [
                "OnProcessing",
                "OnFetching",
                "Successed",
                "TestFailed"
            ]
        },
        "constant.IconCode": {
            "type": "string",
            "enum": [
                "IC0001",
                "IC0002",
                "IC0003"
            ],
            "x-enum-varnames": [
                "Ok",
                "Fail",
                "Pending"
            ]
        },
        "constant.InstallLocation": {
            "type": "string",
            "enum": [
                "local",
                "remote"
            ],
            "x-enum-varnames": [
                "Local",
                "Remote"
            ]
        },
        "constant.PriceCurrency": {
            "type": "string",
            "enum": [
                "USD",
                "KRW"
            ],
            "x-enum-varnames": [
                "USD",
                "KRW"
            ]
        },
        "constant.PricePolicy": {
            "type": "string",
            "enum": [
                "OnDemand"
            ],
            "x-enum-varnames": [
                "OnDemand"
            ]
        },
        "constant.PriceUnit": {
            "type": "string",
            "enum": [
                "PerHour",
                "PerYear"
            ],
            "x-enum-varnames": [
                "PerHour",
                "PerYear"
            ]
        },
        "constant.ResourceType": {
            "type": "string",
            "enum": [
                "VM",
                "VNet",
                "DataDisk",
                "Etc"
            ],
            "x-enum-varnames": [
                "VM",
                "VNet",
                "DataDisk",
                "Etc"
            ]
        },
        "cost.EsimateCostSpecResults": {
            "type": "object",
            "properties": {
                "estimateForecastCostSpecDetailResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cost.EstimateCostSpecDetailResult"
                    }
                },
                "imageName": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "totalMaxMonthlyPrice": {
                    "type": "number"
                },
                "totalMinMonthlyPrice": {
                    "type": "number"
                }
            }
        },
        "cost.EstimateCostInfoResult": {
            "type": "object",
            "properties": {
                "calculatedMonthlyPrice": {
                    "type": "number"
                },
                "currency": {
                    "$ref": "#/definitions/constant.PriceCurrency"
                },
                "id": {
                    "type": "integer"
                },
                "imageName": {
                    "type": "string"
                },
                "instanceType": {
                    "type": "string"
                },
                "lastUpdatedAt": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "originalPricePolicy": {
                    "type": "string"
                },
                "osType": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "priceDescription": {
                    "type": "string"
                },
                "pricePolicy": {
                    "$ref": "#/definitions/constant.PricePolicy"
                },
                "productDescription": {
                    "type": "string"
                },
                "providerName": {
                    "type": "string"
                },
                "regionName": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "unit": {
                    "$ref": "#/definitions/constant.PriceUnit"
                },
                "vCpu": {
                    "type": "string"
                }
            }
        },
        "cost.EstimateCostInfoResults": {
            "type": "object",
            "properties": {
                "estimateCostInfoResult": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cost.EstimateCostInfoResult"
                    }
                },
                "resultCount": {
                    "type": "integer"
                }
            }
        },
        "cost.EstimateCostResults": {
            "type": "object",
            "properties": {
                "esimateCostSpecResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cost.EsimateCostSpecResults"
                    }
                }
            }
        },
        "cost.EstimateCostSpecDetailResult": {
            "type": "object",
            "properties": {
                "calculatedMonthlyPrice": {
                    "type": "number"
                },
                "currency": {
                    "$ref": "#/definitions/constant.PriceCurrency"
                },
                "id": {
                    "type": "integer"
                },
                "lastUpdatedAt": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "originalPricePolicy": {
                    "type": "string"
                },
                "osType": {
                    "type": "string"
                },
                "price": {
                    "type": "string"
                },
                "priceDescription": {
                    "type": "string"
                },
                "pricePolicy": {
                    "$ref": "#/definitions/constant.PricePolicy"
                },
                "productDescription": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "unit": {
                    "$ref": "#/definitions/constant.PriceUnit"
                },
                "vCpu": {
                    "type": "string"
                }
            }
        },
        "cost.GetEstimateForecastCostInfoResult": {
            "type": "object",
            "properties": {
                "category": {
                    "type": "string"
                },
                "date": {
                    "type": "string"
                },
                "provider": {
                    "type": "string"
                },
                "resourceId": {
                    "type": "string"
                },
                "resourceType": {
                    "type": "string"
                },
                "totalCost": {
                    "type": "number"
                },
                "unit": {
                    "type": "string"
                }
            }
        },
        "cost.GetEstimateForecastCostInfoResults": {
            "type": "object",
            "properties": {
                "getEstimateForecastCostInfoResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cost.GetEstimateForecastCostInfoResult"
                    }
                },
                "resultCount": {
                    "type": "integer"
                }
            }
        },
        "cost.UpdateEstimateForecastCostInfoResult": {
            "type": "object",
            "properties": {
                "fetchedDataCount": {
                    "type": "integer"
                },
                "insertedDataCount": {
                    "type": "integer"
                },
                "updatedDataCount": {
                    "type": "integer"
                }
            }
        },
        "load.CreateLoadTestScenarioCatalogReq": {
            "type": "object",
            "required": [
                "duration",
                "name",
                "rampUpSteps",
                "rampUpTime",
                "virtualUsers"
            ],
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Basic load test scenario catalog template"
                },
                "duration": {
                    "type": "string",
                    "example": "300"
                },
                "name": {
                    "type": "string",
                    "example": "Basic Load Test Scenario"
                },
                "rampUpSteps": {
                    "type": "string",
                    "example": "5"
                },
                "rampUpTime": {
                    "type": "string",
                    "example": "60"
                },
                "virtualUsers": {
                    "type": "string",
                    "example": "10"
                }
            }
        },
        "load.GetAllLoadGeneratorInstallInfoResult": {
            "type": "object",
            "properties": {
                "loadGeneratorInstallInfoResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadGeneratorInstallInfoResult"
                    }
                },
                "totalRows": {
                    "type": "integer"
                }
            }
        },
        "load.GetAllLoadTestExecutionInfosResult": {
            "type": "object",
            "properties": {
                "loadTestExecutionInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadTestExecutionInfoResult"
                    }
                },
                "totalRow": {
                    "type": "integer"
                }
            }
        },
        "load.GetAllLoadTestExecutionStateResult": {
            "type": "object",
            "properties": {
                "loadTestExecutionStates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadTestExecutionStateResult"
                    }
                },
                "totalRow": {
                    "type": "integer"
                }
            }
        },
        "load.GetAllLoadTestScenarioCatalogsResult": {
            "type": "object",
            "properties": {
                "loadTestScenarioCatalogs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadTestScenarioCatalogResult"
                    }
                },
                "totalRow": {
                    "type": "integer"
                }
            }
        },
        "load.GetAllMonitoringAgentInfoResult": {
            "type": "object",
            "properties": {
                "monitoringAgentInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.MonitoringAgentInstallationResult"
                    }
                },
                "totalRow": {
                    "type": "integer"
                }
            }
        },
        "load.LoadGeneratorInstallInfoResult": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "installLocation": {
                    "$ref": "#/definitions/constant.InstallLocation"
                },
                "installPath": {
                    "type": "string"
                },
                "installType": {
                    "type": "string"
                },
                "installVersion": {
                    "type": "string"
                },
                "loadGeneratorServers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadGeneratorServerResult"
                    }
                },
                "privateKeyName": {
                    "type": "string"
                },
                "publicKeyName": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "load.LoadGeneratorServerResult": {
            "type": "object",
            "properties": {
                "additionalVmKey": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "csp": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "lat": {
                    "type": "string"
                },
                "lon": {
                    "type": "string"
                },
                "machineType": {
                    "type": "string"
                },
                "privateIp": {
                    "type": "string"
                },
                "publicDns": {
                    "type": "string"
                },
                "publicIp": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "sshPort": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vmId": {
                    "type": "string"
                },
                "zone": {
                    "type": "string"
                }
            }
        },
        "load.LoadTestExecutionHttpInfoResult": {
            "type": "object",
            "properties": {
                "bodyData": {
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "protocol": {
                    "type": "string"
                }
            }
        },
        "load.LoadTestExecutionInfoResult": {
            "type": "object",
            "properties": {
                "agentHostname": {
                    "type": "string"
                },
                "agentInstalled": {
                    "type": "boolean"
                },
                "compileDuration": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "executionDuration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "loadGeneratorInstallInfo": {
                    "$ref": "#/definitions/load.LoadGeneratorInstallInfoResult"
                },
                "loadTestExecutionHttpInfos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.LoadTestExecutionHttpInfoResult"
                    }
                },
                "loadTestExecutionState": {
                    "$ref": "#/definitions/load.LoadTestExecutionStateResult"
                },
                "loadTestKey": {
                    "type": "string"
                },
                "rampUpSteps": {
                    "type": "string"
                },
                "rampUpTime": {
                    "type": "string"
                },
                "testName": {
                    "type": "string"
                },
                "virtualUsers": {
                    "type": "string"
                }
            }
        },
        "load.LoadTestExecutionStateResult": {
            "type": "object",
            "properties": {
                "compileDuration": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "executionDuration": {
                    "type": "string"
                },
                "executionStatus": {
                    "$ref": "#/definitions/constant.ExecutionStatus"
                },
                "expectedFinishAt": {
                    "type": "string"
                },
                "failureMessage": {
                    "type": "string"
                },
                "finishAt": {
                    "type": "string"
                },
                "iconCode": {
                    "$ref": "#/definitions/constant.IconCode"
                },
                "id": {
                    "type": "integer"
                },
                "loadGeneratorInstallInfo": {
                    "$ref": "#/definitions/load.LoadGeneratorInstallInfoResult"
                },
                "loadGeneratorInstallInfoId": {
                    "type": "integer"
                },
                "loadTestKey": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "totalExpectedExecutionSecond": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "load.LoadTestScenarioCatalogResult": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "duration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rampUpSteps": {
                    "type": "string"
                },
                "rampUpTime": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "virtualUsers": {
                    "type": "string"
                }
            }
        },
        "load.LoadTestStatistics": {
            "type": "object",
            "properties": {
                "average": {
                    "type": "number"
                },
                "errorPercent": {
                    "type": "number"
                },
                "label": {
                    "type": "string"
                },
                "maxTime": {
                    "type": "number"
                },
                "median": {
                    "type": "number"
                },
                "minTime": {
                    "type": "number"
                },
                "ninetyFive": {
                    "type": "number"
                },
                "ninetyNine": {
                    "type": "number"
                },
                "ninetyPercent": {
                    "type": "number"
                },
                "receivedKB": {
                    "type": "number"
                },
                "requestCount": {
                    "type": "integer"
                },
                "sentKB": {
                    "type": "number"
                },
                "throughput": {
                    "type": "number"
                }
            }
        },
        "load.MetricsRawData": {
            "type": "object",
            "properties": {
                "isError": {
                    "type": "boolean"
                },
                "timestamp": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "load.MetricsSummary": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "metrics": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.MetricsRawData"
                    }
                }
            }
        },
        "load.MonitoringAgentInstallationResult": {
            "type": "object",
            "properties": {
                "agentType": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mciId": {
                    "type": "string"
                },
                "nsId": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "vmCount": {
                    "type": "integer"
                },
                "vmId": {
                    "type": "string"
                }
            }
        },
        "load.ResultRawData": {
            "type": "object",
            "properties": {
                "bytes": {
                    "type": "integer"
                },
                "connection": {
                    "description": "time to establish connection",
                    "type": "integer"
                },
                "elapsed": {
                    "description": "time to last byte",
                    "type": "integer"
                },
                "idleTime": {
                    "description": "time not spent sampling in jmeter (milliseconds) (generally 0)",
                    "type": "integer"
                },
                "isError": {
                    "type": "boolean"
                },
                "latency": {
                    "description": "time to first byte",
                    "type": "integer"
                },
                "no": {
                    "type": "integer"
                },
                "sentBytes": {
                    "type": "integer"
                },
                "timestamp": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "load.ResultSummary": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/load.ResultRawData"
                    }
                }
            }
        },
        "load.UpdateLoadTestScenarioCatalogReq": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string",
                    "example": "Updated load test scenario catalog template"
                },
                "duration": {
                    "type": "string",
                    "example": "600"
                },
                "name": {
                    "type": "string",
                    "example": "Updated Load Test Scenario"
                },
                "rampUpSteps": {
                    "type": "string",
                    "example": "10"
                },
                "rampUpTime": {
                    "type": "string",
                    "example": "120"
                },
                "virtualUsers": {
                    "type": "string",
                    "example": "20"
                }
            }
        }
    }
}